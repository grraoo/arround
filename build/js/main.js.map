{"version":3,"file":"main.js","sources":["js/utils/render.js","js/abstractView.js","js/screens/intro/intro-view.js","js/screens/intro/intro.js","js/blocks/footer.js","js/blocks/lives.js","js/blocks/header.js","js/blocks/lvlStats.js","js/screens/greeting/greeting-view.js","js/screens/greeting/greeting.js","js/screens/rules/rules-view.js","js/screens/rules/rules.js","js/data/data.js","js/utils/resizeImg.js","js/utils/checkAnswers.js","js/utils/gameParams.js","js/blocks/game.js","js/screens/games/game1-view.js","js/screens/games/game2-view.js","js/screens/games/game3-view.js","js/screens/games/game.js","js/screens/stats/stats-view.js","js/screens/stats/stats.js","js/application.js","js/main.js"],"sourcesContent":["export default function render(view) {\n    let contentScreen = document.querySelector(`.central`);\n    contentScreen.innerHTML = '';\n    contentScreen.appendChild(view.element);\n}\n","import render from './utils/render'\n\nexport default class AbstractView {\n    get template() {\n        throw new Error('Template isn\\'t defined!');\n    }\n    \n    get element() {\n        if (!this._element) {\n            this._element = this._render();\n            this.bind();\n        }\n        \n        return this._element;\n    }\n    \n    _render() {\n        return this.createDOMElement(this.template);\n    }\n    \n    createDOMElement(markup) {\n        let elem = document.createElement('template');\n        elem.innerHTML = markup;\n        return elem.content;\n    }\n    \n    show() {\n        render(this);\n    }\n    \n    bind() {}\n}","import AbstractView from '../../abstractView';\n\nexport default class IntroView extends AbstractView {\n    get template() {\n        return `<div id=\"intro\" class=\"intro\">\n            <h1 class=\"intro__asterisk\">*</h1>\n            <p class=\"intro__motto\"><sup>*</sup> Это не фото. Это рисунок маслом нидерландского художника-фотореалиста Tjalf Sparnaay.</p>\n        </div>`\n    }\n    \n    bind() {\n        let starBtn = this.element.querySelector('.intro__asterisk');\n        starBtn.addEventListener('click', () => {\n            this.onStart();\n        })\n    }\n    \n    onStart() {}\n}\n","import IntroView from './intro-view'\nimport Application from '../../application'\n\nexport default class {\n    constructor() {\n        this._view = new IntroView();\n        this._view.onStart = () => {\n            Application.showGreeting();\n        }\n    }\n    \n    init() {\n        this._view.show();\n    }\n}","export default function footer() {\n    return `\n        <footer class=\"footer\">\n            <a href=\"https://htmlacademy.ru\" class=\"social-link social-link--academy\">HTML Academy</a>\n            <span class=\"footer__made-in\">Сделано в <a href=\"https://htmlacademy.ru\" class=\"footer__link\">HTML Academy</a> &copy; 2016</span>\n            <div class=\"footer__social-links\">\n                <a href=\"https://twitter.com/htmlacademy_ru\" class=\"social-link  social-link--tw\">Твиттер</a>\n                <a href=\"https://www.instagram.com/htmlacademy/\" class=\"social-link  social-link--ins\">Инстаграм</a>\n                <a href=\"https://www.facebook.com/htmlacademy\" class=\"social-link  social-link--fb\">Фэйсбук</a>\n                <a href=\"https://vk.com/htmlacademy\" class=\"social-link  social-link--vk\">Вконтакте</a>\n            </div>\n        </footer>`\n}","export default function lives(lives) {\n    let livesTemplate = `\n        <div class=\"game__lives\">\n            ${new Array(3 - lives).fill(getHeartTemplate('img/heart__empty.svg')).join(``)}\n            ${new Array(lives).fill(getHeartTemplate('img/heart__full.svg')).join(``)}\n        </div>`\n\n    return livesTemplate;\n}\n\nfunction getHeartTemplate(url) {\n    return `<img src=\"${url}\" class=\"game__heart\" alt=\"Life\" width=\"32\" height=\"32\">`;\n}","import livesBlock from '../blocks/lives'\nimport Application from '../application';\n\nexport const onBackClick = () => {\n    Application.showIntro();\n}\n\nexport default function header(state = null) {\n    let content = '';\n    if (state) {\n        let { lives, time } = state;\n        content = state ? `<h1 class=\"game__timer\">${time}</h1>\n            ${livesBlock(lives)}` : ''\n    }\n    \n    let headerTemplate = `<header class=\"header\">\n        <div class=\"header__back\">\n            <span class=\"back\">\n                <img src=\"img/arrow_left.svg\" width=\"45\" height=\"45\" alt=\"Back\">\n                <img src=\"img/logo_small.png\" width=\"101\" height=\"44\">\n            </span>\n        </div>\n        ${content}\n      </header>`\n      \n    return headerTemplate;\n}","export default function lvlStats(stats = []) {\n    return `<div class=\"stats\">\n      <ul class=\"stats\">\n        ${stats.map((status) => `<li class=\"stats__result stats__result--${status}\"></li>`).join('')}\n      </ul>\n    </div>`;\n}","import AbstractView from '../../abstractView';\nimport footer from '../../blocks/footer'\nimport header from '../../blocks/header'\nimport stats from '../../blocks/lvlStats'\n\nexport default class GreetingView extends AbstractView {\n    get template() {\n        return `\n          ${header()}\n          <div class=\"greeting central--blur\">\n            <div class=\"greeting__logo\"><img src=\"img/logo_big.png\" width=\"201\" height=\"89\" alt=\"Pixel Hunter\"></div>\n            <h1 class=\"greeting__asterisk\">*</h1>\n            <div class=\"greeting__challenge\">\n              <h3>Лучшие художники-фотореалисты бросают&nbsp;тебе&nbsp;вызов!</h3>\n              <p>Правила игры просты.<br>\n                Нужно отличить рисунок&nbsp;от фотографии и сделать выбор.<br>\n                Задача кажется тривиальной, но не думай, что все так просто.<br>\n                Фотореализм обманчив и коварен.<br>\n                Помни, \u0003главное — смотреть очень внимательно.</p>\n            </div>\n            <div class=\"greeting__continue\"><span><img src=\"img/arrow_right.svg\" width=\"64\" height=\"64\" alt=\"Next\"></span></div>\n          </div>\n          ${footer()}`\n    }\n    \n    bind() {\n        let backBtn = this.element.querySelector('.back');\n        let openRulesBtn = this.element.querySelector('.greeting__continue');\n        openRulesBtn.addEventListener('click', () => {\n            this.onStart();\n        })\n        backBtn.addEventListener('click', () => {\n            this.onBackClick();\n        })\n    }\n    \n    onStart() {}\n    \n    onBackClick() {}\n}","import GreetingView from './greeting-view'\nimport Application from '../../application'\n\nexport default class {\n    constructor() {\n        this._view = new GreetingView();\n        this._view.onStart = () => {\n            Application.showRules();\n        }\n        this._view.onBackClick = () => {\n            Application.showIntro();\n        }\n    }\n    \n    init() {\n        this._view.show();\n    }\n}","import AbstractView from '../../abstractView'\nimport header from '../../blocks/header'\n\nexport default class RulesView extends AbstractView {\n    get template() {\n        return `\n        ${header()}\n        <div class=\"rules\">\n            <h1 class=\"rules__title\">Правила</h1>\n            <p class=\"rules__description\">Угадай 10 раз для каждого изображения фото <img\n              src=\"img/photo_icon.png\" width=\"16\" height=\"16\"> или рисунок <img\n              src=\"img/paint_icon.png\" width=\"16\" height=\"16\" alt=\"\">.<br>\n              Фотографиями или рисунками могут быть оба изображения.<br>\n              На каждую попытку отводится 30 секунд.<br>\n              Ошибиться можно не более 3 раз.<br>\n              <br>\n              Готовы?\n            </p>\n            <form class=\"rules__form\">\n              <input class=\"rules__input\" type=\"text\" placeholder=\"Ваше Имя\">\n              <button class=\"rules__button  continue\" type=\"submit\" disabled>Go!</button>\n            </form>\n          </div>`\n    }\n    \n    bind() {\n        let startGameBtn = this.element.querySelector('.rules__button');\n        let nameField = this.element.querySelector('.rules__input');\n        let backBtn = this.element.querySelector('.back');\n        \n        backBtn.addEventListener('click', () => {\n            this.onBackClick();\n        })\n        \n        startGameBtn.disabled = true;        \n        \n        nameField.addEventListener('keyup', () => {\n           startGameBtn.disabled = nameField.value ? false : true;\n        }) \n        \n        startGameBtn.addEventListener('click', (ev) => {\n            ev.preventDefault();\n            this.onStartGame();\n        });\n    }\n    \n    onStartGame() {}\n    \n    onBackClick() {}\n}\n","import RulesView from './rules-view'\nimport Application from '../../application'\n\nexport default class {\n    constructor() {\n        this._view = new RulesView();\n        this._view.onStartGame = () => {\n            Application.showGame();\n        }\n        this._view.onBackClick = () => {\n            Application.showGreeting();\n        }\n    }\n    \n    init() {\n        this._view.show();\n    }\n}","const MAX_QUESTIONS_COUNT = 3;\nconst TIME_FOR_QUESTION = 30;\nconst MAX_LIVES = 3;\nconst START_LEVEL = 1;\n\nexport const initialState = {\n    answers: [],\n    questionCount: MAX_QUESTIONS_COUNT,\n    level: null,\n    levelNum: START_LEVEL,\n    time: TIME_FOR_QUESTION,\n    timer: null,\n    lives: MAX_LIVES,\n    stats: new Array(MAX_QUESTIONS_COUNT).fill('unknown')\n}\n\nexport const levels = {\n  '1': {\n    question: `Угадайте для каждого изображения фото или рисунок?`,\n    answers: [\n        {\n            image: `https://k42.kn3.net/CF42609C8.jpg`,\n            type: 'paint'\n        },\n        {\n            image: `http://i.imgur.com/1KegWPz.jpg`,\n            type: 'photo'\n        }\n    ]\n  },\n  '2': {\n    question: `Угадай, фото или рисунок?`,\n    answers: [\n        {\n            image: `https://k32.kn3.net/5C7060EC5.jpg`,\n            type: 'paint'\n        }\n    ]\n  },\n  '3': {\n    question: `Найдите рисунок среди изображений`,\n    answers: [\n        {\n            image: `http://i.imgur.com/DKR1HtB.jpg`,\n            type: 'paint'\n        },\n        {\n            image: `http://i.imgur.com/1KegWPz.jpg`,\n            type: 'photo'\n        },\n        {\n            image: `http://i.imgur.com/1KegWPz.jpg`,\n            type: 'photo'\n        }\n    ]\n  }\n}\n\nexport const stats = new Map([\n  [1, `slow`],\n  [2, `wrong`],\n  [3, `slow`],\n  [4, `fast`],\n  [5, `fast`],\n  [6, `unknown`],\n  [7, `slow`],\n  [8, `fast`],\n  [9, `fast`],\n  [10, `slow`]\n]);","export default function calculateAspectRatioFit(img) {\n    const parentWidth = img.parentNode.clientWidth;\n    const parentHeight = img.parentNode.clientHeight;\n\n    const imgWidth = img.naturalWidth;\n    const imgHeight = img.naturalHeight;\n\n    if (imgWidth > imgHeight) {\n        img.width = parentWidth;\n    } else {\n        img.height = parentHeight;\n    }\n}","export default function checkAnswers(formElements) {\n    return [].filter.call(formElements, (el) => el.checked).length === formElements.length / 2\n}","import { levels } from '../data/data.js'\n\nconst TIME_FOR_QUESTION = 30;\n\nexport function refreshLivesCount(state, isAnswerCorrect) {\n    if (state.lives < 0) {\n        throw new RangeError('Can\\'t get negative value of lives')\n    }\n\n    return isAnswerCorrect\n        ? state\n        : Object.assign({}, state, { lives: state.lives - 1 })\n}\n\nexport function checkAnswers(state, answers) {\n    return levels[state.levelNum].answers.every((answer, i) => {\n        return answers[i] === answer.type\n    })\n}\n\nexport function calcLivesPoints(state) {\n    return state.lives * 50;\n}\n\nexport function calcAnswerPoints(state, answerType) {\n    let points = 0;\n    if (answerType === `correct`) {\n        points = 100;\n    } else if (answerType === `fast`) {\n        points = 50;\n    } else {\n        points = -50;\n    }\n\n    return points + calcLivesPoints(state);\n}\n\nexport function generateGameStat(state, isAnswerCorrect, time) {\n    const newGameStats = state.stats.slice();\n    let answerParam = null;\n    let getAnswerParam = () => {\n        if (isAnswerCorrect) {\n            if (time < 10) {\n                return 'fast';\n            } else if (time > 20 && time <= 30) {\n                return 'slow';\n            } else if (time >= 10 && time <= 20){\n                return 'correct';\n            } else if (time === -1) {\n                return 'wrong';\n            }\n        }\n\n        return 'wrong'\n    }\n\n    time = TIME_FOR_QUESTION - time;\n    newGameStats[state.levelNum - 1] = getAnswerParam();\n    return newGameStats;\n}\n","import lvlStats from '../blocks/lvlStats'\n\nexport default function game(stats, level) {\n    let answers = level.answers.map((answer, i) => {\n        return `\n            <div class=\"game__option\">\n                <img src=\"${answer.image}\" alt=\"Option ${i+1}\" width=\"468\" height=\"458\">\n                <label class=\"game__answer game__answer--photo\">\n                    <input name=\"question${i+1}\" type=\"radio\" value=\"photo\">\n                    <span>Фото</span>\n                </label>\n                <label class=\"game__answer game__answer--paint\">\n                    <input name=\"question${i+1}\" type=\"radio\" value=\"paint\">\n                    <span>Рисунок</span>\n                </label>\n            </div>`\n    }).join('');\n    let gameTemplate = `\n        <div class=\"game\">\n            <p class=\"game__task\">${level.question}</p>\n            <form class=\"game__content\">\n                ${answers}\n            </form>\n            <div class=\"stats\">\n                <ul class=\"stats\">\n                    ${lvlStats(stats)}\n                </ul>\n            </div>\n        </div>`\n\n    return gameTemplate;\n}","import AbstractView from '../../abstractView'\nimport { levels } from '../../data/data.js'\nimport calculateAspectRatioFit from '../../utils/resizeImg.js';\nimport checkAnswers from '../../utils/checkAnswers'\nimport { checkAnswers as isAnswerRight, generateGameStat } from '../../utils/gameParams'\nimport game from '../../blocks/game'\nimport footer from '../../blocks/footer'\nimport header from '../../blocks/header'\n\nconst TIME_FOR_QUESTION = 30;\n\nexport default class Game1View extends AbstractView {\n    constructor(state) {\n        super();\n        this._state = state;\n    }\n    \n    get template() {\n        return `\n            ${header(this._state)}\n            ${game(this._state.stats, levels[this._state.levelNum])}\n            ${footer()}` \n    }\n    \n    bind() {\n        let gameArea = this.element.querySelector('.game__content')\n        let formElements = gameArea.elements;\n        let images = this.element.querySelectorAll(`.game__option > img`);\n        let gameTimer = this.element.querySelector('.game__timer');\n        let backBtn = this.element.querySelector('.back');\n        \n        Array.prototype.forEach.call(images, (img) => {\n            img.addEventListener(`load`, (event) =>{\n                calculateAspectRatioFit(img);\n            });\n        })\n        \n        gameArea.addEventListener('click', () => {\n            if (checkAnswers(formElements)) {\n                let answerValues = [].filter.call(formElements, (answer) => answer.checked).map((answer) => answer.value);\n                let isCorrect = isAnswerRight(this._state, answerValues);\n                clearInterval(this._state.timer);\n                this._state.stats = generateGameStat(this._state, isCorrect, this._state.time);\n                if (!isCorrect)\n                    this._state.lives--;\n                this.onChangeGameScreen();\n            }\n        })\n        \n        this._state.timer = setInterval(() => {\n            this._state.time--;\n            gameTimer.innerHTML = this._state.time;\n        }, 1000);\n        \n        backBtn.addEventListener('click', () => {\n            this.onBackClick();\n        })\n    }\n    \n    onChangeGameScreen() {}\n}\n","import { levels } from '../../data/data'\nimport AbstractView from '../../abstractView'\nimport calculateAspectRatioFit from '../../utils/resizeImg';\nimport checkAnswers from '../../utils/checkAnswers'\nimport { checkAnswers as isAnswerRight, generateGameStat } from '../../utils/gameParams'\nimport game from '../../blocks/game'\nimport footer from '../../blocks/footer'\nimport header from '../../blocks/header'\n\nexport default class Game2View extends AbstractView {\n    constructor(state) {\n        super();\n        this._state = state;\n    }\n    \n    get template() {\n        return `\n            ${header(this._state)}\n            ${game(this._state.stats, levels[this._state.levelNum])}\n            ${footer()}` \n    }\n    \n    bind() {\n        let gameArea = this.element.querySelector('.game__content')\n        let formElements = gameArea.elements;\n        let images = this.element.querySelectorAll(`.game__option > img`);\n        let gameTimer = this.element.querySelector('.game__timer');\n        let backBtn = this.element.querySelector('.back');\n            \n        Array.prototype.forEach.call(images, (img) => {\n            img.addEventListener(`load`, (event) =>{\n                calculateAspectRatioFit(img);\n            });\n        })\n        \n        let gameForm = this.element.querySelector('.game__content');\n        gameForm.addEventListener('click', (ev) => {\n            if (checkAnswers(formElements)) {\n                let answerValues = [].filter.call(formElements, (answer) => answer.checked).map((answer) => answer.value);\n                let isCorrect = isAnswerRight(this._state, answerValues);\n                clearInterval(this._state.timer);\n                this._state.stats = generateGameStat(this._state, isCorrect, this._state.time);\n                if (!isCorrect)\n                    this._state.lives--;\n                this.onChangeGameScreen();\n            }\n        })\n        \n        this._state.timer = setInterval(() => {\n            this._state.time--;\n            gameTimer.innerHTML = this._state.time;\n        }, 1000);\n        \n        backBtn.addEventListener('click', () => {\n            this.onBackClick();\n        })\n    }\n    \n    onChangeGameScreen() {}\n}\n","import AbstractView from '../../abstractView'\nimport calculateAspectRatioFit from '../../utils/resizeImg.js';\nimport checkAnswers from '../../utils/checkAnswers'\nimport { initialState, stats as statsData, levels } from '../../data/data.js'\nimport { checkAnswers as isAnswerRight, generateGameStat } from '../../utils/gameParams'\nimport game from '../../blocks/game'\nimport footer from '../../blocks/footer'\nimport header from '../../blocks/header'\n\nexport default class Game3View extends AbstractView {\n    constructor(state) {\n        super();\n        this._state = state;\n    }\n    \n    get template() {\n        return `\n            ${header(this._state)}\n            ${game(this._state.stats, levels[this._state.levelNum])}\n            ${footer()}`\n    }\n    \n    bind() {\n        let gameArea = this.element.querySelector('.game__content');\n        let formElements = gameArea.elements;\n        let images = this.element.querySelectorAll(`.game__option > img`);\n        let gameTimer = this.element.querySelector('.game__timer');\n        let backBtn = this.element.querySelector('.back');\n        \n        Array.prototype.forEach.call(images, (img) => {\n            img.addEventListener(`load`, (event) => {\n                calculateAspectRatioFit(img);\n            })\n        })\n        \n        gameArea.addEventListener('click', (ev) => {\n            if (checkAnswers(formElements)) {\n                let answerValues = [].filter.call(formElements, (answer) => answer.checked).map((answer) => answer.value);\n                let isCorrect = isAnswerRight(this._state, answerValues);\n                clearInterval(this._state.timer);\n                this._state.stats = generateGameStat(this._state, isCorrect, this._state.time);\n                if (!isCorrect)\n                    this._state.lives--;\n                this.onChangeGameScreen();\n            }\n        })\n        \n        this._state.timer = setInterval(() => {\n            this._state.time--;\n            gameTimer.innerHTML = this._state.time;\n        }, 1000);\n        \n        backBtn.addEventListener('click', () => {\n            this.onBackClick();\n        })\n    }\n    \n    onChangeGameScreen() {}\n}","import Game1View from './game1-view';\nimport Game2View from './game2-view';\nimport Game3View from './game3-view';\nimport { levels } from '../../data/data';\nimport { initialState } from '../../data/data';\nimport Application from '../../application';\n\nconst TIME_FOR_QUESTION = 30;\n\nexport default class {\n    constructor() {\n        this._state = Object.assign({}, initialState);\n        this._gameScreenList = [Game1View, Game2View, Game3View];\n        this._gameScreenNum = 0;\n    }\n\n    init() {\n        this._screen.onBackClick = () => {\n            Application.showIntro();\n        }\n        this._screen.show();\n    }\n\n    get _screen() {\n        if (!this._currentGameScreen)\n            this._currentGameScreen = this._getGameScreen(this._state);\n\n        return this._currentGameScreen;\n    }\n\n    _getGameScreen(state) {\n        let currentGame = this._gameScreenList[this._gameScreenNum];\n        const screen = new currentGame(state);\n        if (this._gameScreenNum !== this._gameScreenList.length - 1)\n            this._gameScreenNum++;\n        screen.onChangeGameScreen = () => {\n            this._checkAnswer();\n        };\n\n        return screen;\n    }\n\n    _checkAnswer() {\n        if (this._state.questionCount)\n            this._state.questionCount--    \n        if (this._state.questionCount > 0) {\n            this._state.levelNum++;\n            this._state.level = levels[this._state.levelNum];\n            this._currentGameScreen = this._getGameScreen(this._state);\n            this._stopTimer();\n            this._resetTime();\n            this._screen.onBackClick = () => {\n                Application.showIntro();\n            }\n            this._screen.show();\n        } else {\n            Application.showStats();\n        }\n    }\n    \n    _stopTimer() {\n        clearInterval(this._state.timer);\n    }\n    \n    _resetTime() {\n        this._state.time = TIME_FOR_QUESTION;\n    }\n}\n","import AbstractView from '../../abstractView'\nimport header from '../../blocks/header'\n\nexport default class extends AbstractView {\n    get template() {\n        return `\n        ${header()}\n        <div class=\"result\">\n          <h1>Победа!</h1>\n          <table class=\"result__table\">\n            <tr>\n              <td class=\"result__number\">1.</td>\n              <td colspan=\"2\">\n                <ul class=\"stats\">\n                  <li class=\"stats__result stats__result--wrong\"></li>\n                  <li class=\"stats__result stats__result--slow\"></li>\n                  <li class=\"stats__result stats__result--fast\"></li>\n                  <li class=\"stats__result stats__result--correct\"></li>\n                  <li class=\"stats__result stats__result--wrong\"></li>\n                  <li class=\"stats__result stats__result--unknown\"></li>\n                  <li class=\"stats__result stats__result--slow\"></li>\n                  <li class=\"stats__result stats__result--unknown\"></li>\n                  <li class=\"stats__result stats__result--fast\"></li>\n                  <li class=\"stats__result stats__result--unknown\"></li>\n                </ul>\n              </td>\n              <td class=\"result__points\">×&nbsp;100</td>\n              <td class=\"result__total\">900</td>\n            </tr>\n            <tr>\n              <td></td>\n              <td class=\"result__extra\">Бонус за скорость:</td>\n              <td class=\"result__extra\">1&nbsp;<span class=\"stats__result stats__result--fast\"></span></td>\n              <td class=\"result__points\">×&nbsp;50</td>\n              <td class=\"result__total\">50</td>\n            </tr>\n            <tr>\n              <td></td>\n              <td class=\"result__extra\">Бонус за жизни:</td>\n              <td class=\"result__extra\">2&nbsp;<span class=\"stats__result stats__result--heart\"></span></td>\n              <td class=\"result__points\">×&nbsp;50</td>\n              <td class=\"result__total\">100</td>\n            </tr>\n            <tr>\n              <td></td>\n              <td class=\"result__extra\">Штраф за медлительность:</td>\n              <td class=\"result__extra\">2&nbsp;<span class=\"stats__result stats__result--slow\"></span></td>\n              <td class=\"result__points\">×&nbsp;50</td>\n              <td class=\"result__total\">-100</td>\n            </tr>\n            <tr>\n              <td colspan=\"5\" class=\"result__total  result__total--final\">950</td>\n            </tr>\n          </table>\n          <table class=\"result__table\">\n            <tr>\n              <td class=\"result__number\">2.</td>\n              <td>\n                <ul class=\"stats\">\n                  <li class=\"stats__result stats__result--wrong\"></li>\n                  <li class=\"stats__result stats__result--slow\"></li>\n                  <li class=\"stats__result stats__result--fast\"></li>\n                  <li class=\"stats__result stats__result--correct\"></li>\n                  <li class=\"stats__result stats__result--wrong\"></li>\n                  <li class=\"stats__result stats__result--unknown\"></li>\n                  <li class=\"stats__result stats__result--slow\"></li>\n                  <li class=\"stats__result stats__result--wrong\"></li>\n                  <li class=\"stats__result stats__result--fast\"></li>\n                  <li class=\"stats__result stats__result--wrong\"></li>\n                </ul>\n              </td>\n              <td class=\"result__total\"></td>\n              <td class=\"result__total  result__total--final\">fail</td>\n            </tr>\n          </table>\n          <table class=\"result__table\">\n            <tr>\n              <td class=\"result__number\">3.</td>\n              <td colspan=\"2\">\n                <ul class=\"stats\">\n                  <li class=\"stats__result stats__result--wrong\"></li>\n                  <li class=\"stats__result stats__result--slow\"></li>\n                  <li class=\"stats__result stats__result--fast\"></li>\n                  <li class=\"stats__result stats__result--correct\"></li>\n                  <li class=\"stats__result stats__result--wrong\"></li>\n                  <li class=\"stats__result stats__result--unknown\"></li>\n                  <li class=\"stats__result stats__result--slow\"></li>\n                  <li class=\"stats__result stats__result--unknown\"></li>\n                  <li class=\"stats__result stats__result--fast\"></li>\n                  <li class=\"stats__result stats__result--unknown\"></li>\n                </ul>\n              </td>\n              <td class=\"result__points\">×&nbsp;100</td>\n              <td class=\"result__total\">900</td>\n            </tr>\n            <tr>\n              <td></td>\n              <td class=\"result__extra\">Бонус за жизни:</td>\n              <td class=\"result__extra\">2&nbsp;<span class=\"stats__result stats__result--heart\"></span></td>\n              <td class=\"result__points\">×&nbsp;50</td>\n              <td class=\"result__total\">100</td>\n            </tr>\n            <tr>\n              <td colspan=\"5\" class=\"result__total  result__total--final\">950</td>\n            </tr>\n          </table>\n        </div>`\n    }\n    \n    bind() {\n        const backBtn = this.element.querySelector('.back');\n        backBtn.addEventListener('click', () => {\n            this.onBackClick();\n        })\n    }\n    \n    onBackClick() {}\n}","import StatsView from './stats-view';\nimport { onBackClick } from '../../blocks/header'\n\nexport default class {\n    constructor() {\n        this._view = new StatsView();\n    }\n\n    init() {\n        this._view.show();\n        this._view.onBackClick = onBackClick;\n    }\n}","import Intro from './screens/intro/intro';\nimport Greeting from './screens/greeting/greeting';\nimport Rules from './screens/rules/rules';\nimport Game from './screens/games/game';\nimport Stats from './screens/stats/stats';\n\nconst GameState = {\n    INTRO: '',\n    GREETING: 'greeting',\n    RULES: 'rules',\n    GAME: 'game',\n    STATS: 'stats'\n}\n\nconst getGameStateFromHash = (hash) => hash.replace('#', '');\n\nclass Application {\n    constructor() {\n        this._routes = {\n            [GameState.INTRO]: Intro,\n            [GameState.GREETING]: Greeting,\n            [GameState.RULES]: Rules,\n            [GameState.GAME]: Game,\n            [GameState.STATS]: Stats\n        }\n        \n        window.onhashchange = () => {\n            this._changeGameState(getGameStateFromHash(location.hash));\n        }\n    }\n\n    init() {\n        this._changeGameState(getGameStateFromHash(location.hash));\n    }\n\n    showIntro() {\n        location.hash = GameState.INTRO;\n    }\n\n    showGreeting() {\n        location.hash = GameState.GREETING;\n    }\n\n    showRules() {\n        location.hash = GameState.RULES;\n    }\n\n    showGame() {\n        location.hash = GameState.GAME;\n    }\n\n    showStats() {\n        location.hash = GameState.STATS;\n    }\n    \n    _changeGameState(route = GameState.INTRO) {\n        const Screen = this._routes[route];\n        if (!Screen) return\n        new Screen().init();\n    }\n};\n\nconst app = new Application();\nexport default app;\n","import Application from './application'\n\nApplication.init();\n"],"names":["Application","lives","livesBlock","TIME_FOR_QUESTION","checkAnswers","isAnswerRight"],"mappings":"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"}